.globl _start
.data
    srcstr: .string  "string to be copied"
    dststr: .string  "destination string is long enough"
.text
_start:
    
    # chiama strcpy    
    la   a0, srcstr
    la   a1, dststr
    jal  ra, strcpy

	add a0, a1, zero
	li a7, 4
	ecall

    #exit
    li   a7, 10
    ecall


# strlen
# a0 - str
strlen:
	li t0, 0 # i
	for:
		lb t1, 0(a0)
		beqz t1, endfor
		addi t0, t0, 1
		addi a0, a0, 1
		j for
		
	endfor:
		add a0, zero, t0
		jr ra
		
		
# strcpy
# a0 - str1
# a1 - str2
strcpy:
	addi sp, sp, -24
	sd ra, 0(sp)
	sd a0, 8(sp)
	sd a1, 16(sp)
	
	ld a0, 8(sp)
	jal ra, strlen
	add s0, a0, zero # n
	
	ld a0, 16(sp)
	jal ra, strlen
	add s1, a0, zero # m
	
	li t0, 0 # i
	ld t1, 8(sp) # source
	ld t2, 16(sp) # destination
	for1:
		bge t0, s0, endfor1
		lb t3, 0(t1)
		sb t3, 0(t2)
		addi t0, t0, 1
		addi t1, t1, 1
		addi t2, t2, 1
		j for1
	endfor1:
	
	for2:
		bge t0, s1, endfor2
		sb zero, 0(t2)
		addi t0, t0, 1
		j for2
	endfor2:
	
	ld ra, 0(sp)
	ld a0, 8(sp)
	ld a1, 16(sp)
	addi sp, sp, 24
	jr ra
	
	
	
	